//: Playground - noun: a place where people can play

import UIKit

/*******************************************************
*
*   [ Swift ] 迴圈控制
*
*******************************************************/

/*******************************************************
*
*   for
*
*******************************************************/

var sum = 0, tmp = 0

for var i=1; i<=10; i++ {
    
    tmp = sum
    sum += i
    print("\(tmp) + \(i) = \(sum)")
    
}

/*******************************************************
*
*   for-in -> 條件式使用 ...
*
*******************************************************/

var sum1 = 0, tmp1 = 0

for x in 1...10 {
    
    tmp1 = sum1
    sum1 += x
    
    print("\(tmp1) + \(x) = \(sum1)")
    
}

/*******************************************************
*
*   for-in -> 條件式使用 ..<
*
*******************************************************/

var sum2 = 0, tmp2 = 0

for x in 1..<11 {
    
    tmp2 = sum2
    sum2 += x
    
    print("\(tmp2) + \(x) = \(sum2)")
    
}

/*******************************************************
*
*   Lab - for-in
*
*******************************************************/

// 依序將「Makee.io」的字母輸出

var name = "Makee.io"

for char in name {
    
    print("\(char)")
    
}

/*******************************************************
*
*   Lab - while
*
*******************************************************/

// 印出所有「小於等於該正數」的奇數值

var no = 20, i = 1

while i <= no {
    
    print("\(i)")
    i+=2
    
}

/*******************************************************
*
*   Lab - do-while
*
*******************************************************/

// 印出所有「平方小於等於此正數」的數字

var no1 = 20, i1 = 1

do {
    
    print("\(i1)")
    
    i1++
    
} while i1*i1 <= no

/*******************************************************
*
*   break - 不帶標籤:跳出所在層的迴圈主體
*
*******************************************************/

for var x=0 ; x<2 ; x++ {
    
    for var y=0 ; y<5 ; y++ {
        
        if y == 2 {
            break
        }
        
        print("x:\(x), y:\(y)")
        
    }
    
}

/*******************************************************
*
*   break - 帶標籤:跳出標籤的迴圈主體
*
*******************************************************/

label1: for var x=0 ; x<2 ; x++ {
    
    label2: for var y=0 ; y<5 ; y++ {
        
        if y == 2 {
            break label1
        }
        
        print("x:\(x), y:\(y)")
        
    }
    
}

/*******************************************************
*
*   continue - 不帶標籤:跳出所在層的迴圈，隨後進行下次的 Loop
*
*******************************************************/

for var x=0 ; x<2 ; x++ {
    
    for var y=0 ; y<5 ; y++ {
        
        if y == 2 {
            continue
        }
        
        print("x:\(x), y:\(y)")
        
    }
    
}

/*******************************************************
*
*   continue - 帶標籤:跳出標籤的迴圈，隨後進行下次的 Loop
*
*******************************************************/

label1: for var x=0 ; x<2 ; x++ {
    
    label2: for var y=0 ; y<5 ; y++ {
        
        if y == 2 {
            continue label1
        }
        
        print("x:\(x), y:\(y)")
        
    }
    
}
